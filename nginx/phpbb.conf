server {
    listen 80;
    listen [::]:80; # IPv6 support
    server_name example.com www.example.com;

    # Replace the path with the actual path to WordPress core files
    root /home/web/sites/example.com/public;

    access_log /var/log/nginx/example.com-http.log;

    # for LetsEncrypt
    location ^~ /.well-known/acme-challenge {
        auth_basic off;
        try_files $uri =404;
        expires -1;
    }

    location / {
        return 301 https://$host$request_uri;
        include 'globals/hsts.conf';
        include 'globals/security-headers.conf';
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2; # IPv6 support
    server_name example.com;

    # hide the following line, if you enable the server-level 301 redirect above
    server_name www.example.com;

    # default file to serve
    index index.php index.html index.htm;

    # Replace the path with the actual path to WordPress core files
    root /home/web/sites/example.com/public;

    ssl_certificate "/etc/letsencrypt/live/example.com/fullchain.pem";
    ssl_certificate_key "/etc/letsencrypt/live/example.com/privkey.pem";

    # Logs
    access_log /var/log/nginx/example.com-access.log;
    # access_log /var/log/nginx/example.com-access.log combined if=$loggable;
    # if the log files become too large, you may use the following format. $loggable is defined in conf.d/common.conf
    # access_log /var/log/nginx/example.com-access.log combined buffer=64k flush=5m if=$loggable;

    # ideally use it along with fail2ban
    error_log /var/log/nginx/example.com-error.log;
    # use the following pattern only for debugging - server support needed
    # error_log /var/log/nginx/example.com-error.log debug;

    # include "blacklist.conf";
    # include "blacklist-china.conf";
    # include "blacklist-brazil.conf";

    include globals/restrictions.conf;
    include globals/assets.conf;

    location / {
        # phpBB uses index.htm
        index index.php index.html index.htm;
        try_files $uri $uri/ @rewriteapp;
        include 'globals/hsts.conf';
        include 'globals/security-headers.conf';
    }

    location @rewriteapp {
        rewrite ^(.*)$ /app.php/$1 last;
    }

    # Deny access to internal phpbb files.
    location ~ /(config\.php|common\.php|cache|files|images/avatars/upload|includes|(?<!ext/)phpbb(?!\w+)|store|vendor) {
        deny all;
        # deny was ignored before 0.8.40 for connections over IPv6.
        # Use internal directive to prohibit access on older versions.
        internal;
        include 'globals/hsts.conf';
        include 'globals/security-headers.conf';
    }

    # Pass the php scripts to fastcgi server specified in upstream declaration.
    location ~ \.php(/|$) {
        # Unmodified fastcgi_params from nginx distribution.
        include fastcgi_params;
        # Necessary for php.
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        try_files $uri $uri/ /app.php$is_args$args;
        fastcgi_pass fpm;
        include 'globals/hsts.conf';
        include 'globals/security-headers.conf';
    }

    # Correctly pass scripts for installer
    location /install/ {
        # phpBB uses index.htm
        try_files $uri $uri/ @rewrite_installapp =404;
        include 'globals/hsts.conf';
        include 'globals/security-headers.conf';

        # Pass the php scripts to fastcgi server specified in upstream declaration.
        location ~ \.php(/|$) {
            # Unmodified fastcgi_params from nginx distribution.
            include fastcgi_params;
            # Necessary for php.
            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            fastcgi_param DOCUMENT_ROOT $realpath_root;
            try_files $uri $uri/ /install/app.php$is_args$args =404;
            fastcgi_pass fpm;
            include 'globals/hsts.conf';
            include 'globals/security-headers.conf';
        }
    }

    location @rewrite_installapp {
        rewrite ^(.*)$ /install/app.php/$1 last;
    }

}

